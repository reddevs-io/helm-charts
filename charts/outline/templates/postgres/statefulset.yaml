{{- if .Values.postgres.enable }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "outline.postgres.fullname" . }}
  labels:
    {{- include "outline.postgres.labels" . | nindent 4 }}
  annotations:
    reloader.stakater.com/auto: "true"
    ignore-check.kube-linter.io/no-read-only-root-fs: "PostgreSQL needs write access to data directory"
spec:
  serviceName: {{ include "outline.postgres.fullname" . }}-headless
  {{- if not .Values.postgres.autoscaling.enabled }}
  replicas: {{ .Values.postgres.replicaCount }}
  {{- end }}
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      {{- include "outline.postgres.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.postgres.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "outline.postgres.labels" . | nindent 8 }}
        {{- with .Values.postgres.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      restartPolicy: Always
      dnsConfig:
        options:
          - name: ndots
            value: "2"
      {{- with .Values.postgres.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "outline.postgres.serviceAccountName" . }}
      {{- with .Values.postgres.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: postgres
          {{- with .Values.postgres.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
          imagePullPolicy: {{ .Values.postgres.image.pullPolicy }}
          ports:
            - name: postgres
              containerPort: {{ .Values.postgres.service.port }}
              protocol: TCP
          {{- if or .Values.postgres.env.normal .Values.postgres.env.secret }}
          env:
          {{- range $key, $val := .Values.postgres.env.secret }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "outline.postgres.fullname" $ }}
                  key: {{ $key }}
          {{- end}}
          {{- range $key, $val := .Values.postgres.env.normal }}
            - name: {{ $key }}
              valueFrom:
                configMapKeyRef:
                  name: {{ include "outline.postgres.fullname" $ }}
                  key: {{ $key }}
          {{- end}}
          {{- end}}
          {{- with .Values.postgres.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.postgres.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.postgres.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
          {{- if .Values.postgres.persistence.enabled }}
            - name: postgres-data
              mountPath: {{ .Values.postgres.persistence.mountPath }}
          {{- end }}
          {{- with .Values.postgres.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.postgres.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.postgres.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.postgres.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.postgres.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- if .Values.postgres.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: postgres-data
        labels:
          {{- include "outline.postgres.labels" . | nindent 10 }}
      spec:
        accessModes:
          - {{ .Values.postgres.persistence.accessMode | quote }}
        resources:
          requests:
            storage: {{ .Values.postgres.persistence.size | quote }}
        {{- if .Values.postgres.persistence.storageClass }}
        {{- if (eq "-" .Values.postgres.persistence.storageClass) }}
        storageClassName: ""
        {{- else }}
        storageClassName: {{ .Values.postgres.persistence.storageClass | quote }}
        {{- end }}
        {{- end }}
  {{- end }}
{{- end }}
