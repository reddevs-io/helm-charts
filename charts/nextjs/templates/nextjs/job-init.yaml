{{- if .Values.initJob.enabled }}
{{- $frontendFullname := include "nextjs.fullname" . -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "nextjs.fullname" . }}-init
  labels:
    {{- include "nextjs.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    ignore-check.kube-linter.io/no-liveness-probe: "The init job would mainly be used to run deployment commands. Does not need to be live"
    ignore-check.kube-linter.io/no-readiness-probe: "The init job would mainly be used to run deployment commands. Does not need to be ready"
spec:
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "nextjs.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      dnsConfig:
        options:
          - name: ndots
            value: "2"
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "nextjs.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: OnFailure
      containers:
        - name: {{ .Chart.Name }}-init
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/sh", "-c"]
          args:
            - {{ .Values.initJob.command | quote }}
          {{- if or .Values.env.normal .Values.env.secret }}
          env:
          {{- range $key, $val := .Values.env.secret }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ $frontendFullname }}
                  key: {{ $key }}
          {{- end}}
          {{- range $key, $val := .Values.env.normal }}
            - name: {{ $key }}
              valueFrom:
                configMapKeyRef:
                  name: {{ $frontendFullname }}
                  key: {{ $key }}
          {{- end}}
          {{- end}}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
