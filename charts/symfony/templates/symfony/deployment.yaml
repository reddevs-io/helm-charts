{{- $symfonyFullname := include "symfony.fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "symfony.fullname" . }}
  labels:
    {{- include "symfony.labels" . | nindent 4 }}
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      {{- include "symfony.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "symfony.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      restartPolicy: Always
      dnsConfig:
        options:
          - name: ndots
            value: "2"
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "symfony.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- if or .Values.env.normal .Values.env.secret (and .Values.externalSecrets.enabled .Values.externalSecrets.awsProvider.enabled .Values.externalSecrets.data) }}
          env:
          {{- if and .Values.externalSecrets.enabled .Values.externalSecrets.awsProvider.enabled .Values.externalSecrets.data }}
          {{- range .Values.externalSecrets.data }}
            - name: {{ .envName | default .secretKey }}
              valueFrom:
                secretKeyRef:
                  name: {{ $symfonyFullname }}-eso
                  key: {{ .secretKey }}
          {{- end }}
          {{- end }}
          {{- range $key, $val := .Values.env.secret }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ $symfonyFullname }}
                  key: {{ $key }}
          {{- end}}
          {{- range $key, $val := .Values.env.normal }}
            - name: {{ $key }}
              valueFrom:
                configMapKeyRef:
                  name: {{ $symfonyFullname }}
                  key: {{ $key }}
          {{- end}}
          {{- end}}
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: symfony-ini
              mountPath: /usr/local/etc/php/conf.d/symfony.ini
              subPath: symfony.ini
          {{- if .Values.nginxUnit.enable }}
            - name: symfony-json
              mountPath: /docker-entrypoint.d/symfony.json
              subPath: symfony.json
              readOnly: true
          {{- end }}
          {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: symfony-ini
          configMap:
            name: {{ include "symfony.fullname" . }}
            items:
              - key: symfony.ini
                path: symfony.ini
      {{- if .Values.nginxUnit.enable }}
        - name: symfony-json
          configMap:
            name: {{ include "symfony.fullname" . }}
            items:
              - key: symfony.json
                path: symfony.json
      {{- end }}
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
