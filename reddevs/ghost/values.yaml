# Default values for ghost.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

name: ghost
tier: blog

image:
  repository: ghost
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "5-alpine"

env:
  normal:
    database__client: "mysql"
    database__connection__host: ""
    database__connection__user: ""
    database__connection__database: ""
    database__connection__port: 3306
    mail__transport: ""
    mail__options__service: ""
    mail__options__host: ""
    mail__options__port: ""
    mail__options__auth__user: ""
    url: ""
  secret:
    database__connection__password: ""
    mail__options__auth__pass: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 2368
  containerPort: 2368

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  requests:
    memory: 300Mi
  limits:
    memory: 300Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 2
  targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
  - name: ghost-files
    persistentVolumeClaim:
      claimName: "ghost-files"

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: ghost-files
    mountPath: /var/lib/ghost/content

persistentVolume:
  claimName: "ghost-files"
  storageClassName: ""
  existingClaim: ""
  size: 2Gi
  accessModes:
    - ReadWriteMany

nodeSelector: {}

tolerations: []

affinity: {}
