{{- $configSecretName := include "mysql.fullname" . -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "mysql.fullname" . }}
  labels:
    {{- include "mysql.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "mysql.matchLabels" . | nindent 6 }}
  serviceName: {{ include "mysql.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        {{- include "mysql.labels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ include "mysql.fullname" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          ports:
            - containerPort: {{ .Values.service.port }}
          volumeMounts:
            - name: {{ if .Values.volumes.existingClaim }}{{ .Values.volumes.existingClaim }}{{- else }}{{ .Values.volumes.claimName }}{{- end }}
              mountPath: {{ .Values.volumes.mountPath }}
          env:
          {{- range $key, $val := .Values.env.secret }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ $configSecretName }}
                  key: {{ $key }}
          {{- end}}
          {{- range $key, $val := .Values.env.normal }}
            - name: {{ $key }}
              valueFrom:
                configMapKeyRef:
                  name: {{ $configSecretName }}
                  key: {{ $key }}
          {{- end}}
  volumeClaimTemplates:
    - metadata:
        name: {{ if .Values.volumes.existingClaim }}{{ .Values.volumes.existingClaim }}{{- else }}{{ .Values.volumes.claimName }}{{- end }}
      spec:
        accessModes:
      {{ toYaml .Values.volumes.accessModes | indent 4 }}
        storageClassName: {{ .Values.volumes.storageClassName }}
        resources:
          requests:
            storage: {{ .Values.volumes.size }}
